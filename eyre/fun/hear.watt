    ++  fact
      $&  @                                             ::  entropy
        [%bill f=(fort) t=(date) b=(bill)]              ::  foreign shared key
        [%clue p=(path) g=(glob)]                       ::  local event
        [%oath f=(fort) p=(path) g=(glob)]              ::  foreign data
        [%note u=0* t=(term)]                           ::  admin note
        [%pass p=(term)]                                ::  passphrase
        [%ring f=(fort) r=(ring)]                       ::  foreign public key
        [%time t=(date)]                                ::  moment in time
        [%wand f=(fort) w=(wand)]                       ::  new private key
      ==
    ++  hear
      |=  kap=@  ^-  *(list fact)
      =+  who=*(unit fort)                              ::  packet authority
      =+  key=0
      |-  ^-  *(list fact)
      =+  [mag=(end 3 2 kap) bod=(rsh 3 2 kap)]
      ~|  [%hear mag]
      ?-    mag
      ::::
          %bu                                           ::  bundled
        =+  gut=(cue bod)
        |-  ^-  *(list fact)
        ?:  =(~ gut)
          ~
        ?>  ?=([@ *] gut)
        (weld $(kap -.gut) $(gut +.gut))
      ::
          %ch                                           ::  channel
        ?<  ?=(~ who)
        =+  gut=(cue bod)
        ?>  ?=([@ @] gut)
        [[%bill who gut] ~]
      ::
          %cl                                           ::  local clue
        ?>  =([~ ~] who)
        =+  gut=(cue bod)
        ?>  ?=([* *] gut)
        [[%clue gut] ~]
      ::
          %cr                                           ::  encrypted
        =+  gut=(cue bod)
        ?>  ?=([@ @] gut)
        =+  bil=(sark -.gut)                            ::  SERVICE
        ?<  ?=(~ bil)
        =+  cul=(shed b.bil +.gut)
        ?<  ?=(~ cul)
        $(who [~ f.bil], kap u.cul)
      ::
          %ju  bod                                      ::  entropy
          %oh                                           ::  sworn
        ?<  ?=(~ who)
        =+  gut=(cue bod)
        ?>  ?=(^ gut)
        [[%oath u.who gut] ~]
      ::
          %pa                                           ::  set passphrase
        [%pass bod]
      ::
          %ps                                           ::  use passphrase
        =+  cul=(shed pass bod)                         ::  SERVICE
        ?<  ?=(~ cul)
        $(who [~ ~], kap u.cul)
      ::
          %sl                                           ::  sealed
        =+  gut=(cue bod)
        ?>  ?=([f=@ s=@] gut)
        =+  wad=(wine f.gut)                            ::  SERVICE
        ?<  ?=(~ wad)
        =+  dew=(chew:ar u.wad s.gut)
        ?<  ?=(~ dew)
        $(kap u.dew) 
      ::
          %sn                                           ::  signed
        =+  gut=(cue bod)
        ?>  ?=([f=@ s=@] gut)
        =+  rig=(meat f.gut)                            ::  SERVICE
        ?<  ?=(~ rig)
        =+  dew=(chew:ar u.rig s.gut)
        ?<  ?=(~ dew)
        $(who [~ f.gut], kap u.dew) 
      ::
          %ri                                           ::  public key
        =+  gut=(cue bod)
        ?>  ?=([f=@ r=@] gut)
        ?<  =(0 f.gut)
        ?>  ?|  =(1 (met 3 f.gut))
                ?&  =(1 (met 4 f.gut))
                    =(who [~ (end 3 1 f.gut)])
                ==
                ?&  =(1 (met 5 f.gut))
                    =(who [~ (end 4 1 f.gut)])
                ==
                ?&  =(1 (met 6 f.gut))
                    =(who [~ (end 5 1 f.gut)])
                ?&  =(1 (met 7 f.gut))
                    =(f.gut (shaf r.gut))
                ==
            ==
        [[%ring gut] ~]
      ::
          %ti
        ?>  =([~ ~] who)
        =+  gut=(cue bod)
        ?>  ?=(@ gut)
        [[%time gut] ~]
      ::
          %wa                                           ::  identity
        =+  gut=(cue bod)
        ?>  ?=([f=@ w=@]
        =+  rig=(drip w.gut) 
        ?:  =(1 (met 7 f.gut))
          ?>  =(f.gut (shaf rig))
          [[%ring f.gut rig] [%wand gut] ~]
        ?:  rag=(meat f.gut)                            ::  SERVICE
        ?>  =(rag [~ rig])
        [[%wand gut] ~]
      :::: 
      ==
    ::
